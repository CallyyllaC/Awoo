@page "/edit/session"
@page "/edit/session/{id:int}"

@inject ITabletopSessionService TabletopSessionService
@inject IUserService UserService
@inject ITTRPGService TTRPGService

@if (Id == null)
{
    <PageTitle>Create A New Session</PageTitle>
    <h3>Create A New Session</h3>
}
else
{
    <PageTitle>@session.Name</PageTitle>
    <h3>@session.Name : @session.Id</h3>
    <h5>by @session.GameMaster.Username</h5>
}

<EditForm Model="session" OnSubmit="HandleSubmit">
    <div>
        <label for="name">Name</label>
        <InputText for="name" @bind-Value="session.Name" class="form-control"></InputText>
    </div>
    <div>
        <label>Game Master</label><br/>
        <InputSelect @bind-Value="session.GameMaster" class="form-select">
            @foreach (var GM in UserService.Users)
            {
                <option value="@GM.Id">@GM.Username</option>
            }
        </InputSelect>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Update Session</button>

</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    TabletopSession session = new TabletopSession();

    protected override async Task OnInitializedAsync()
    {
        await TabletopSessionService.GetSessions();
        await UserService.GetUsers();
        await TTRPGService.GetTTRPGs();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
    //Create a new session
        }
        else
        {
            session = await TabletopSessionService.GetSession((int)Id);
        }


        await base.OnParametersSetAsync();
    }

    private async Task HandleSubmit()
    {

    }
}